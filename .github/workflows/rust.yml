name: rust

on:
  push:
    branches: [ "main" ]
    paths:
      - "crates/**"
  pull_request:
    branches: [ "main" ]
    paths:
      - "crates/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            crates/target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('crates/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy, rustfmt

      - name: Cargo build
        working-directory: ./crates
        run: cargo build --workspace --all-targets --all-features --verbose

      - name: Cargo clippy
        working-directory: ./crates
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Cargo fmt
        working-directory: ./crates
        run: cargo fmt --all --check
